--- a/BALPv2-main/public/app.html+++ b/BALPv2-main/public/app.html@@ -70,5 +70,38 @@ <script>window.API_URL = window.API_URL || '/balp2/api.php';</script>
 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
 <script src="./js/app.js"></script>
+
+<!-- ADDED: global fetch wrapper to remove token query param and add Authorization header -->
+<script>
+(function(){
+  const originalFetch = window.fetch.bind(window);
+  window.fetch = function(input, init){
+    try {
+      let url = (typeof input === 'string') ? input : input.url;
+      if (url && url.includes('/api/')) {
+        // remove token query param if present
+        url = url.replace(/[?&]token=[^&]*/g, '');
+        // ensure proper delimiting (remove trailing ? or & if left)
+        url = url.replace(/[?&]$/, '');
+        if (typeof input === 'string') {
+          input = url;
+        } else {
+          // create a new Request to be safe
+          input = new Request(url, input);
+        }
+        init = init || {};
+        init.headers = new Headers(init.headers || {});
+        const token = localStorage.getItem('balp_token') || localStorage.getItem('token') || '';
+        if (token) init.headers.set('Authorization', 'Bearer ' + token);
+      }
+    } catch (e) {
+      console.warn('fetch wrapper error', e);
+    }
+    return originalFetch(input, init);
+  };
+})();
+</script>
+<!-- END ADDED -->
+
 </body>
 </html>
--- a/BALPv2-main/helpers.php+++ b/BALPv2-main/helpers.php@@ -1,4 +1,15 @@ <?php
+// ADDED: Security headers (X-Content-Type-Options, X-Frame-Options, Referrer-Policy, Permissions-Policy, basic CSP)
+if (!headers_sent()) {
+    header("X-Content-Type-Options: nosniff");
+    header("X-Frame-Options: SAMEORIGIN");
+    header("Referrer-Policy: no-referrer-when-downgrade");
+    header("Permissions-Policy: geolocation=()");
+    header("X-Permitted-Cross-Domain-Policies: none");
+    // basic CSP - adjust allowed sources as needed (this is conservative)
+    header("Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; img-src 'self' data:;");
+}
+
 // Unified helper utilities for BALP v2
 
 if (!defined('BALP_UTF8_BOOTSTRAPPED')) {
--- a/scripts/audit_api_auth.php+++ b/scripts/audit_api_auth.php@@ -0,0 +1,26 @@+<?php
+// scripts/audit_api_auth.php
+// Scans modules/*/api/*.php for potential missing JWT/auth checks.
+// Usage: php scripts/audit_api_auth.php
+$base = __DIR__ . '/../';
+$dirs = glob($base . 'modules/*/api/*.php');
+$report = [];
+foreach ($dirs as $f) {
+    $c = file_get_contents($f);
+    // heuristics: look for jwt decode or require_auth or check_jwt or Authorization header usage
+    $has_auth = preg_match('/jwt_decode|require_auth|check_jwt|Authorization|bearer/i', $c);
+    if (!$has_auth) {
+        $report[] = $f;
+    }
+}
+echo \"Audit of API endpoints for missing auth checks\\n\";
+echo \"Found \" . count($dirs) . \" api files, potentially missing auth in \" . count($report) . \" files.\\n\\n\";
+foreach ($report as $r) {
+    echo \"$r\\n\";
+}
+if (empty($report)) {
+    echo \"No obvious missing auth checks found by heuristic. Review manually.\\n\";
+} else {
+    echo \"\\nNote: this is a heuristic scan. Some public endpoints are validly public. Review listed files manually.\\n\";
+}
+?>
--- a/PATCH_README.txt+++ b/PATCH_README.txt@@ -0,0 +1,32 @@+
+PATCH SUMMARY
+============
+This patch performs the following changes to improve security and token handling:
+
+1) Inject a global fetch() wrapper into public/app.html that:
+   - Removes ?token=... query params from API requests.
+   - Adds Authorization: Bearer <token> header automatically for /api/ requests using token from localStorage (keys: balp_token or token).
+   - This avoids sending JWTs in URLs (referrers / logs) while keeping frontend behavior intact.
+
+2) Modify any JS 'withToken' helper functions found to a no-op returning the original URL (prevents adding token to URL).
+
+3) Add security HTTP headers in helpers.php (or index.php if helpers.php not found):
+   - X-Content-Type-Options: nosniff
+   - X-Frame-Options: SAMEORIGIN
+   - Referrer-Policy: no-referrer-when-downgrade
+   - Permissions-Policy: geolocation=()
+   - Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; img-src 'self' data:
+
+4) Add scripts/audit_api_auth.php which scans modules/*/api/*.php for files that may be missing JWT/authorization checks (heuristic).
+
+INSTALL / APPLY
+---------------
+- Review changes in the included diff file (BALPv2_patch.diff) and the ZIP (BALPv2_patch.zip).
+- Backup your current installation.
+- Copy modified files into your project, or apply the patch using 'patch' or git.
+- Adjust Content-Security-Policy as needed for your allowed CDNs.
+- Consider switching to HttpOnly Secure cookies + refresh token flow; this patch only prevents tokens in URL and adds headers.
+
+Notes:
+- The fetch wrapper triggers for URLs containing '/api/' â€” if your API path differs, update the script accordingly.
+- The audit script is heuristic and may produce false positives/negatives. Manually review results.
